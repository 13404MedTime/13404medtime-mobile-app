import 'package:flutter/material.dart';
import 'package:flutter_typeahead/flutter_typeahead.dart';
import 'package:madadio_client_mobile/src/core/extension/extension.dart';

class DoctorAdvice extends StatefulWidget {
  const DoctorAdvice({super.key});

  @override
  State<DoctorAdvice> createState() => _DoctorAdviceState();
}

class _DoctorAdviceState extends State<DoctorAdvice> {
  late final TextEditingController phoneController;
  late final TextEditingController firstnameController;
  late final TextEditingController lastnameController;
  late final TextEditingController medicineController;
  late final TextEditingController commentController;

  @override
  void initState() {
    super.initState();
    phoneController = TextEditingController();
    firstnameController = TextEditingController();
    lastnameController = TextEditingController();
    medicineController = TextEditingController();
    commentController = TextEditingController();
  }

  @override
  void dispose() {
    phoneController.dispose();
    firstnameController.dispose();
    lastnameController.dispose();
    medicineController.dispose();
    commentController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) => Scaffold(
        appBar: AppBar(
          backgroundColor: context.theme.colorScheme.background,
          surfaceTintColor: context.theme.colorScheme.background,
          title: Text(
            'Bemor',
            style: context.theme.appBarTheme.titleTextStyle?.copyWith(
              fontSize: 28,
            ),
          ),
        ),
        body: Padding(
          padding: AppUtils.kPaddingAll16,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const Text('Telefon raqami'),
              AppUtils.kBoxHeight8,
              TypeAheadField<String>(
                controller: phoneController,
                builder: (context, controller, focusNode) => TextField(
                  focusNode: focusNode,
                  controller: controller,
                  decoration: InputDecoration(
                    disabledBorder: const OutlineInputBorder(
                      borderSide: BorderSide.none,
                      borderRadius: AppUtils.kBorderRadius10,
                    ),
                    enabledBorder: const OutlineInputBorder(
                      borderSide: BorderSide.none,
                      borderRadius: AppUtils.kBorderRadius10,
                    ),
                    focusedBorder: const OutlineInputBorder(
                      borderSide: BorderSide.none,
                      borderRadius: AppUtils.kBorderRadius10,
                    ),
                    contentPadding: AppUtils.kPaddingAll16,
                    hintText: 'Telefon raqamini kiriting',
                    hintStyle: TextStyle(
                      fontSize: 14,
                      color: context.color.onBackground50,
                    ),
                    filled: true,
                    fillColor: context.color.disabledCard,
                  ),
                ),
                hideOnEmpty: true,
                hideOnError: true,
                hideOnLoading: true,
                loadingBuilder: (_) => AppUtils.kBox,
                itemBuilder: (context, value) => ListTile(
                  title: Text(value),
                ),
                itemSeparatorBuilder: (context, index) =>
                    AppUtils.kDividerBlack07,
                onSelected: (value) {
                  phoneController.text = value.toString();
                  FocusScope.of(context).unfocus();
                },
                suggestionsCallback: (search) =>
                    ['+998911234567', '+998910005755', '+998910015755'],
              ),
              AppUtils.kBoxHeight16,
              const Text('Ismi'),
              AppUtils.kBoxHeight8,
              TextField(
                style: TextStyle(
                  color: context.colorScheme.onBackground,
                ),
                controller: firstnameController,
                decoration: InputDecoration(
                  disabledBorder: const OutlineInputBorder(
                    borderSide: BorderSide.none,
                    borderRadius: AppUtils.kBorderRadius10,
                  ),
                  enabled: false,
                  contentPadding: AppUtils.kPaddingAll16,
                  filled: true,
                  fillColor: context.color.disabledCard,
                ),
              ),
              AppUtils.kBoxHeight16,
              const Text('Familiya'),
              AppUtils.kBoxHeight8,
              TextField(
                style: TextStyle(
                  color: context.colorScheme.onBackground,
                ),
                controller: lastnameController,
                decoration: InputDecoration(
                  disabledBorder: const OutlineInputBorder(
                    borderSide: BorderSide.none,
                    borderRadius: AppUtils.kBorderRadius10,
                  ),
                  enabled: false,
                  contentPadding: AppUtils.kPaddingAll16,
                  filled: true,
                  fillColor: context.color.disabledCard,
                ),
              ),
              AppUtils.kBoxHeight16,
              const Text('Dori nomi'),
              AppUtils.kBoxHeight8,
              TypeAheadField<String>(
                controller: medicineController,
                builder: (context, controller, focusNode) => TextField(
                  focusNode: focusNode,
                  controller: controller,
                  decoration: InputDecoration(
                    disabledBorder: const OutlineInputBorder(
                      borderSide: BorderSide.none,
                      borderRadius: AppUtils.kBorderRadius10,
                    ),
                    enabledBorder: const OutlineInputBorder(
                      borderSide: BorderSide.none,
                      borderRadius: AppUtils.kBorderRadius10,
                    ),
                    focusedBorder: const OutlineInputBorder(
                      borderSide: BorderSide.none,
                      borderRadius: AppUtils.kBorderRadius10,
                    ),
                    contentPadding: AppUtils.kPaddingAll16,
                    hintText: 'Dori nomini kiriting',
                    hintStyle: TextStyle(
                      fontSize: 14,
                      color: context.color.onBackground50,
                    ),
                    filled: true,
                    fillColor: context.color.disabledCard,
                  ),
                ),
                hideOnEmpty: true,
                hideOnError: true,
                hideOnLoading: true,
                loadingBuilder: (_) => AppUtils.kBox,
                itemBuilder: (context, value) => ListTile(
                  title: Text(value),
                ),
                itemSeparatorBuilder: (context, index) =>
                    AppUtils.kDividerBlack07,
                onSelected: (value) {
                  phoneController.text = value.toString();
                  FocusScope.of(context).unfocus();
                },
                suggestionsCallback: (search) => ['Dori1', 'Dori2', 'Dori3'],
              ),
              AppUtils.kBoxHeight16,
              const Text('Fikr qoldirish'),
              AppUtils.kBoxHeight8,
              TextField(
                controller: commentController,
                maxLines: 10,
                minLines: 1,
                decoration: InputDecoration(
                  disabledBorder: const OutlineInputBorder(
                    borderSide: BorderSide.none,
                    borderRadius: AppUtils.kBorderRadius10,
                  ),
                  enabledBorder: const OutlineInputBorder(
                    borderSide: BorderSide.none,
                    borderRadius: AppUtils.kBorderRadius10,
                  ),
                  focusedBorder: const OutlineInputBorder(
                    borderSide: BorderSide.none,
                    borderRadius: AppUtils.kBorderRadius10,
                  ),
                  contentPadding: AppUtils.kPaddingAll16,
                  filled: true,
                  fillColor: context.color.disabledCard,
                ),
              ),
              AppUtils.kBoxWidth16,
              ElevatedButton(
                onPressed: () {},
                child: const Text('Jo\'natish'),
              ),
            ],
          ),
        ),
      );
}
